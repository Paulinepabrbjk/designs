const jscad = require('@jscad/modeling')
const { curves, maths, extrusions, primitives, transforms, booleans, 
	colors, geometries, measurements, utils } = jscad
const { bezier } = curves
const { slice, extrudeLinear } = extrusions
const { cuboid, polygon, polyhedron } = primitives
const { intersect, subtract,union } = booleans
const { center, scale, translateX, translateY, translateZ, translate
		,rotateX, rotateY, rotateZ, rotate } = transforms
const { colorize } = colors
const { geom3, poly3 } = geometries
const { vec3 } = maths
const { measureBoundingBox, measureArea } = measurements
const { degToRad } = utils

const getParameterDefinitions = () => {
  return [
    {name: 'g1', caption: 'Lignes', type: 'group'},
    {name: 'l0', caption: '#1:', type: 'slider', min:"0", max:"100", step:"1", initial:"50"},
    {name: 'l1', caption: '#2:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l2', caption: '#3:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l3', caption: '#4:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l4', caption: '#5:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l5', caption: '#6:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l6', caption: '#7:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l7', caption: '#8:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l8', caption: '#9:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'l9', caption: '#10:',type: 'slider', min:"0", max:"100", step:"1", initial:"0"},

    {name: 'g2', caption: 'Colonnes', type: 'group'},
    {name: 'c0', caption: '#1:', type: 'slider', min:"0", max:"100", step:"1", initial:"50"},
    {name: 'c1', caption: '#2:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c2', caption: '#3:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c3', caption: '#4:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c4', caption: '#5:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c5', caption: '#6:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c6', caption: '#7:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c7', caption: '#8:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c8', caption: '#9:', type: 'slider', min:"0", max:"100", step:"1", initial:"0"},
    {name: 'c9', caption: '#10:',type: 'slider', min:"0", max:"100", step:"1", initial:"0"},

    {name: 'g3', caption: 'Parametres', type: 'group'},
    //,{name: 'v', type:'text', caption: 'volume:', initial: 'test'}
    ,{name: 'ep', type:'float', caption: 'ep (mm):', initial: 6.0}    

   ];
}

volume = function () {
  const faces =[[0,127,120],[0,169,127],[0,340,133],[0,358,169],[1,120,126],[1,126,121],[1,339,135],[1,340,120],[2,121,125],[2,125,122],[2,338,137],[2,339,121],[3,122,124],[3,164,139],[3,338,122],[4,128,18],[5,19,152],[5,152,123],[5,153,19],[6,20,153],[6,150,20],[7,21,150],[7,196,21],[8,151,22],[8,319,158],[9,23,151],[9,152,23],[9,160,159],[10,24,128],[10,123,129],[11,159,130],[11,331,25],[12,158,318],[12,318,26],[13,160,131],[14,340,132],[14,344,145],[14,358,133],[14,362,180],[15,339,134],[15,340,135],[15,343,144],[15,344,132],[16,338,136],[16,339,137],[16,342,143],[16,343,134],[17,337,138],[17,338,139],[17,341,142],[17,342,136],[18,128,146],[18,165,4],[18,341,140],[18,342,142],[19,153,156],[19,342,141],[19,343,143],[19,345,157],[20,150,155],[20,343,156],[20,344,144],[21,196,201],[21,344,155],[21,362,145],[22,151,154],[22,319,8],[22,349,161],[22,413,320],[23,152,157],[23,345,163],[23,349,154],[23,350,162],[24,129,147],[24,342,146],[24,345,141],[25,129,11],[25,331,330],[25,345,147],[25,350,163],[25,419,148],[26,131,12],[26,318,321],[26,349,149],[26,413,161],[27,131,149],[27,332,13],[27,349,162],[27,350,148],[27,419,333],[28,166,315],[28,167,164],[28,409,167],[29,165,31],[29,316,166],[30,337,167],[30,341,138],[30,409,314],[30,411,168],[31,165,140],[31,316,29],[31,341,168],[31,411,317],[32,175,169],[32,353,175],[32,357,170],[32,358,182],[33,174,170],[33,352,174],[33,356,171],[33,357,184],[34,173,171],[34,210,173],[34,355,210],[34,356,186],[35,47,176],[35,176,173],[35,211,47],[36,48,199],[36,198,48],[36,199,174],[37,49,196],[37,196,175],[37,199,49],[38,50,197],[38,319,50],[39,51,198],[39,197,51],[39,206,197],[40,176,52],[40,177,172],[41,178,205],[41,205,177],[42,204,179],[42,318,204],[43,179,206],[43,206,178],[43,326,55],[44,357,182],[44,358,180],[44,361,181],[44,362,191],[45,356,184],[45,357,181],[45,360,183],[45,361,190],[46,355,186],[46,356,183],[46,359,185],[46,360,189],[47,211,187],[47,359,189],[47,360,192],[48,198,203],[48,360,190],[48,361,202],[48,363,188],[49,199,202],[49,361,191],[49,362,201],[50,319,320],[50,367,200],[50,413,207],[51,197,200],[51,363,203],[51,367,208],[51,368,209],[52,176,192],[52,177,40],[52,360,188],[52,363,193],[53,177,193],[53,327,41],[53,363,209],[53,368,194],[53,417,328],[54,179,195],[54,318,42],[54,367,207],[54,413,321],[55,179,43],[55,326,329],[55,367,195],[55,368,208],[55,417,194],[56,355,213],[56,369,210],[56,406,212],[56,407,311],[57,59,211],[57,310,59],[57,369,212],[57,406,310],[58,355,185],[58,359,214],[58,407,213],[58,408,312],[59,310,313],[59,359,187],[59,408,214],[60,222,264],[60,228,215],[60,372,222],[61,221,215],[61,230,216],[61,371,221],[62,220,216],[62,232,217],[63,219,217],[63,259,219],[64,78,223],[64,223,219],[64,260,78],[65,247,79],[65,251,248],[65,371,220],[66,250,245],[66,251,80],[66,371,248],[66,372,221],[67,250,81],[67,296,291],[67,372,245],[67,390,222],[68,82,246],[68,253,323],[68,323,82],[69,83,247],[69,246,83],[69,255,246],[70,223,84],[70,224,218],[71,225,254],[71,254,224],[71,331,225],[72,253,226],[72,324,253],[73,226,255],[73,255,225],[73,332,87],[74,240,227],[74,275,240],[75,227,239],[75,239,229],[76,229,238],[76,238,231],[77,231,237],[77,373,234],[77,377,233],[78,260,235],[78,377,237],[78,378,241],[79,247,252],[79,251,65],[79,381,236],[80,250,66],[81,296,67],[82,323,322],[82,385,249],[82,415,256],[83,246,249],[83,381,252],[83,385,257],[83,386,258],[84,223,241],[84,224,70],[84,378,236],[84,381,242],[85,224,242],[85,331,71],[85,381,258],[85,386,243],[85,419,330],[86,226,244],[86,324,72],[86,385,256],[86,415,325],[87,226,73],[87,332,333],[87,385,244],[87,386,257],[87,419,243],[88,261,259],[88,315,261],[88,373,262],[88,409,315],[89,91,260],[89,316,91],[90,373,233],[90,377,263],[90,409,262],[90,411,314],[91,316,317],[91,377,235],[91,411,263],[92,264,270],[92,389,265],[92,393,277],[93,388,266],[93,389,269],[93,392,279],[93,393,265],[94,305,281],[94,388,268],[94,392,266],[94,405,305],[95,282,306],[95,388,271],[95,405,268],[96,297,108],[96,298,293],[96,388,269],[96,389,294],[96,401,267],[97,296,109],[97,297,294],[97,389,270],[97,390,291],[98,292,110],[98,323,299],[99,111,292],[99,293,111],[99,401,293],[99,402,300],[100,287,271],[100,288,112],[100,388,267],[100,401,272],[101,300,273],[101,327,113],[101,401,300],[101,416,327],[102,324,114],[103,301,274],[103,326,273],[104,277,276],[104,286,275],[105,279,278],[105,285,276],[106,281,280],[106,284,278],[107,95,287],[107,282,95],[107,287,284],[108,297,285],[108,298,96],[109,296,286],[109,297,97],[110,292,295],[110,323,98],[110,403,302],[110,415,322],[111,293,298],[111,403,295],[111,404,303],[112,287,100],[112,288,283],[113,272,101],[113,304,288],[113,327,328],[113,404,304],[113,417,289],[114,274,102],[114,324,325],[114,403,290],[114,415,302],[115,274,290],[115,326,103],[115,403,303],[115,404,289],[115,417,329],[116,391,305],[116,405,307],[116,406,311],[116,407,308],[117,313,310],[117,405,306],[117,406,307],[118,309,280],[118,312,309],[118,391,308],[118,407,312],[119,117,282],[119,313,117],[120,340,0],[121,339,1],[122,338,2],[123,125,5],[124,128,4],[124,164,3],[125,123,334],[125,153,5],[126,150,6],[126,153,335],[127,150,336],[127,196,7],[128,123,10],[129,24,10],[129,159,11],[130,160,13],[130,331,11],[131,27,13],[131,158,12],[132,340,15],[132,344,14],[133,340,14],[133,358,0],[134,339,16],[134,343,15],[135,339,15],[135,340,1],[136,338,17],[136,342,16],[137,338,16],[137,339,2],[138,337,30],[138,341,17],[139,164,337],[139,337,17],[139,338,3],[140,165,18],[140,341,31],[141,342,24],[141,345,19],[142,341,18],[142,342,17],[143,342,19],[143,343,16],[144,343,20],[144,344,15],[145,344,21],[145,362,14],[146,128,24],[146,342,18],[147,129,25],[147,345,24],[148,350,25],[148,419,27],[149,131,26],[149,349,27],[150,127,7],[151,160,9],[152,159,347],[153,126,6],[154,151,23],[154,349,22],[155,150,21],[155,344,20],[156,153,20],[156,343,19],[157,152,19],[157,345,23],[158,151,8],[159,152,9],[159,160,348],[160,151,346],[161,349,26],[161,413,22],[162,349,23],[162,350,27],[163,345,25],[163,350,23],[164,166,28],[165,124,4],[165,166,351],[166,165,29],[167,409,30],[168,341,30],[168,411,31],[169,175,354],[169,358,32],[170,353,32],[170,357,33],[171,352,33],[171,356,34],[172,176,40],[172,198,36],[173,176,352],[173,211,35],[174,172,36],[174,199,353],[175,199,37],[177,53,41],[177,205,365],[178,326,43],[179,54,42],[180,358,14],[180,362,44],[181,357,44],[181,361,45],[182,357,32],[182,358,44],[183,356,45],[183,360,46],[184,356,33],[184,357,45],[185,355,46],[185,359,58],[186,355,34],[186,356,46],[187,211,59],[187,359,47],[188,360,48],[188,363,52],[189,359,46],[189,360,47],[190,360,45],[190,361,48],[191,361,44],[191,362,49],[192,176,47],[192,360,52],[193,177,52],[193,363,53],[194,368,55],[194,417,53],[195,179,55],[195,367,54],[197,204,38],[198,205,39],[200,197,50],[200,367,51],[201,196,49],[201,362,21],[202,199,48],[202,361,49],[203,198,51],[203,363,48],[204,197,364],[204,319,38],[205,206,39],[206,205,366],[207,367,50],[207,413,54],[208,367,55],[208,368,51],[209,363,51],[209,368,53],[210,355,56],[211,369,57],[212,369,56],[212,406,57],[213,355,58],[213,407,56],[214,359,59],[214,408,58],[215,230,61],[215,372,60],[216,232,62],[216,371,61],[217,220,62],[217,234,63],[218,223,70],[218,247,65],[219,223,370],[219,260,64],[220,218,65],[221,371,66],[222,372,67],[224,85,71],[224,254,383],[225,332,73],[226,86,72],[227,228,74],[228,227,376],[228,275,74],[229,230,75],[230,227,75],[230,229,375],[231,232,76],[232,229,76],[232,231,374],[233,373,77],[233,377,90],[234,231,77],[234,259,63],[235,260,91],[235,377,78],[236,238,79],[236,381,84],[237,377,77],[237,378,78],[238,236,378],[238,251,79],[239,250,80],[239,251,379],[240,250,380],[240,296,81],[241,223,78],[241,378,84],[242,224,84],[242,381,85],[243,386,87],[243,419,85],[244,226,87],[244,385,86],[245,250,67],[245,372,66],[246,253,68],[247,254,69],[248,251,66],[248,371,65],[249,246,82],[249,385,83],[250,240,81],[251,239,80],[252,247,83],[252,381,79],[253,246,382],[254,255,69],[255,254,384],[256,385,82],[256,415,86],[257,385,87],[257,386,83],[258,381,83],[258,386,85],[259,261,387],[259,373,88],[260,261,89],[261,316,89],[262,373,90],[262,409,88],[263,377,91],[263,411,90],[264,228,60],[264,277,394],[265,389,93],[265,393,92],[266,388,94],[266,392,93],[267,388,96],[267,401,100],[268,388,95],[268,405,94],[269,388,93],[269,389,96],[270,389,92],[270,390,97],[271,287,95],[271,388,100],[272,288,100],[272,401,101],[273,301,103],[273,416,101],[274,115,103],[274,299,102],[275,277,104],[275,286,398],[276,279,105],[276,286,104],[277,264,92],[278,281,106],[278,285,105],[279,276,393],[279,393,93],[280,284,106],[280,391,118],[281,278,392],[281,305,391],[281,392,94],[282,309,119],[283,287,112],[283,298,108],[284,282,107],[284,287,396],[285,283,108],[285,297,397],[286,297,109],[288,272,113],[288,304,399],[289,404,113],[289,417,115],[290,274,114],[290,403,115],[291,296,97],[291,390,67],[292,301,99],[293,401,96],[294,297,96],[294,389,97],[295,292,111],[295,403,110],[298,304,111],[299,292,98],[299,324,102],[300,401,99],[301,292,400],[301,402,99],[302,403,114],[302,415,110],[303,403,111],[303,404,115],[304,404,111],[305,405,116],[306,282,117],[306,405,95],[307,405,117],[307,406,116],[308,391,116],[308,407,118],[309,282,395],[309,313,119],[310,406,117],[311,406,56],[311,407,116],[312,407,58],[313,309,408],[313,408,59],[314,409,90],[314,411,30],[315,409,28],[316,261,410],[317,316,31],[317,411,91],[319,204,412],[320,319,22],[320,413,50],[321,318,54],[321,413,26],[322,323,110],[322,415,82],[324,299,414],[325,324,86],[325,415,114],[327,178,41],[328,327,53],[328,417,113],[329,326,115],[329,417,55],[330,331,85],[330,419,25],[332,130,13],[332,225,418],[333,332,27],[333,419,87],[334,122,125],[334,123,128],[334,124,122],[334,128,124],[335,121,126],[335,125,121],[335,153,125],[336,120,127],[336,126,120],[336,150,126],[337,164,167],[346,131,160],[346,151,158],[346,158,131],[347,123,152],[347,129,123],[347,159,129],[348,130,159],[348,160,130],[351,124,165],[351,164,124],[351,166,164],[352,171,173],[352,172,174],[352,176,172],[353,170,174],[353,199,175],[354,127,169],[354,175,196],[354,196,127],[364,179,204],[364,197,206],[364,206,179],[365,172,177],[365,198,172],[365,205,198],[366,178,206],[366,205,178],[369,173,210],[369,211,173],[370,217,219],[370,218,220],[370,220,217],[370,223,218],[371,216,220],[372,215,221],[373,259,234],[374,217,232],[374,231,234],[374,234,217],[375,216,230],[375,229,232],[375,232,216],[376,215,228],[376,227,230],[376,230,215],[378,231,238],[378,237,231],[379,229,239],[379,238,229],[379,251,238],[380,227,240],[380,239,227],[380,250,239],[382,226,253],[382,246,255],[382,255,226],[383,218,224],[383,247,218],[383,254,247],[384,225,255],[384,254,225],[387,219,259],[387,260,219],[387,261,260],[390,264,222],[390,270,264],[391,280,281],[392,278,279],[393,276,277],[394,228,264],[394,275,228],[394,277,275],[395,280,309],[395,282,284],[395,284,280],[396,278,284],[396,283,285],[396,285,278],[396,287,283],[397,276,285],[397,286,276],[397,297,286],[398,240,275],[398,286,296],[398,296,240],[399,283,288],[399,298,283],[399,304,298],[400,274,301],[400,292,299],[400,299,274],[402,273,300],[402,301,273],[408,309,312],[410,166,316],[410,261,315],[410,315,166],[412,158,319],[412,204,318],[412,318,158],[414,253,324],[414,299,323],[414,323,253],[416,178,327],[416,273,326],[416,326,178],[418,130,332],[418,225,331],[418,331,130]]
  const vertices = [[9.67166656,8.0923151e-16,2.42930935],[8.93545478,-3.70118656,2.42930935],[6.84003739,-6.82976224,2.42930935],[3.93813462,-8.87941015,2.42930935],[3.41344147,-8.08677687,2.98],[6.27336592,-5.52433072,2.98],[8.04277844,-3.33142791,2.98],[8.70544065,4.8572257e-16,2.98],[3.67193961,-1.04934646,2.98],[4.48467284,-3.27658433,2.98],[4.80076053,-6.79124988,2.98],[2.91101689,-4.67000205,2.98],[2.67168312,-1.26646577,2.98],[2.26989999,-2.71385521,2.98],[9.67166656,7.8336981e-16,-0.87483457],[8.93545478,-3.70118656,-0.87483457],[6.84003739,-6.82976224,-0.87483457],[3.93813462,-8.87941015,-0.87483457],[3.39974554,-8.05963746,-1.45306147],[6.25637442,-5.50055936,-1.45474488],[8.01591553,-3.32030093,-1.45474488],[8.67636445,5.3590028e-16,-1.45474488],[3.67193961,-1.04934646,-1.42552522],[4.48467284,-3.27658433,-1.42552522],[4.76997272,-6.77462213,-1.44750716],[2.91101689,-4.67000205,-1.42552522],[2.67168312,-1.26646577,-1.42552522],[2.26989999,-2.71385521,-1.42552522],[1.65068179,-9.43713726,2.42930935],[1.48577417,-8.49434147,2.98],[1.65068179,-9.43713726,-0.87483457],[1.48362782,-8.46523066,-1.45474488],[8.93545478,3.70118656,2.42930935],[6.84003739,6.82976224,2.42930935],[3.93813462,8.87941015,2.42930935],[3.41344147,8.08677687,2.98],[6.27336592,5.52433072,2.98],[8.04277844,3.33142791,2.98],[3.67193961,1.04934646,2.98],[4.48467284,3.27658433,2.98],[4.80076053,6.79124988,2.98],[2.91101689,4.67000205,2.98],[2.67168312,1.26646577,2.98],[2.26989999,2.71385521,2.98],[8.93545478,3.70118656,-0.87483457],[6.84003739,6.82976224,-0.87483457],[3.93813462,8.87941015,-0.87483457],[3.39974554,8.05963746,-1.45306147],[6.25637442,5.50055936,-1.45474488],[8.01591553,3.32030093,-1.45474488],[3.67193961,1.04934646,-1.42552522],[4.48467284,3.27658433,-1.42552522],[4.76997272,6.77462213,-1.44750716],[2.91101689,4.67000205,-1.42552522],[2.67168312,1.26646577,-1.42552522],[2.26989999,2.71385521,-1.42552522],[1.65068179,9.43713726,2.42930935],[1.48577417,8.49434147,2.98],[1.65068179,9.43713726,-0.87483457],[1.48362782,8.46523066,-1.45474488],[-9.67166656,8.0923151e-16,2.42930935],[-8.93545478,-3.70118656,2.42930935],[-6.84003739,-6.82976224,2.42930935],[-3.93813462,-8.87941015,2.42930935],[-3.41344147,-8.08677687,2.98],[-6.27336592,-5.52433072,2.98],[-8.04277844,-3.33142791,2.98],[-8.70544065,4.8572257e-16,2.98],[-3.67193961,-1.04934646,2.98],[-4.48467284,-3.27658433,2.98],[-4.80076053,-6.79124988,2.98],[-2.91101689,-4.67000205,2.98],[-2.67168312,-1.26646577,2.98],[-2.26989999,-2.71385521,2.98],[-9.67166656,7.8336981e-16,-0.87483457],[-8.93545478,-3.70118656,-0.87483457],[-6.84003739,-6.82976224,-0.87483457],[-3.93813462,-8.87941015,-0.87483457],[-3.39974554,-8.05963746,-1.45306147],[-6.25637442,-5.50055936,-1.45474488],[-8.01591553,-3.32030093,-1.45474488],[-8.67636445,5.3590028e-16,-1.45474488],[-3.67193961,-1.04934646,-1.42552522],[-4.48467284,-3.27658433,-1.42552522],[-4.76997272,-6.77462213,-1.44750716],[-2.91101689,-4.67000205,-1.42552522],[-2.67168312,-1.26646577,-1.42552522],[-2.26989999,-2.71385521,-1.42552522],[-1.65068179,-9.43713726,2.42930935],[-1.48577417,-8.49434147,2.98],[-1.65068179,-9.43713726,-0.87483457],[-1.48362782,-8.46523066,-1.45474488],[-8.93545478,3.70118656,2.42930935],[-6.84003739,6.82976224,2.42930935],[-3.93813462,8.87941015,2.42930935],[-3.41344147,8.08677687,2.98],[-6.27336592,5.52433072,2.98],[-8.04277844,3.33142791,2.98],[-3.67193961,1.04934646,2.98],[-4.48467284,3.27658433,2.98],[-4.80076053,6.79124988,2.98],[-2.91101689,4.67000205,2.98],[-2.67168312,1.26646577,2.98],[-2.26989999,2.71385521,2.98],[-8.93545478,3.70118656,-0.87483457],[-6.84003739,6.82976224,-0.87483457],[-3.93813462,8.87941015,-0.87483457],[-3.39974554,8.05963746,-1.45306147],[-6.25637442,5.50055936,-1.45474488],[-8.01591553,3.32030093,-1.45474488],[-3.67193961,1.04934646,-1.42552522],[-4.48467284,3.27658433,-1.42552522],[-4.76997272,6.77462213,-1.44750716],[-2.91101689,4.67000205,-1.42552522],[-2.67168312,1.26646577,-1.42552522],[-2.26989999,2.71385521,-1.42552522],[-1.65068179,9.43713726,2.42930935],[-1.48577417,8.49434147,2.98],[-1.65068179,9.43713726,-0.87483457],[-1.48362782,8.46523066,-1.45474488],[9.48404312,-1.88649347,2.42930935],[8.04018353,-5.37227888,2.42930935],[5.3768244,-8.00362846,2.42930935],[5.38322917,-6.49304585,2.98],[3.77297939,-8.47142657,2.98],[6.55063586,-6.50953527,2.98],[8.55287921,-3.54271856,2.98],[9.25756974,6.2450045e-16,2.98],[4.314614,-7.58182031,2.98],[4.42208261,-5.65350318,2.98],[2.60180445,-3.57927076,2.98],[2.85954499,-2.17108417,2.98],[9.48404312,-1.88649347,-0.87483457],[9.96665401,8.6535717e-16,0.77723739],[8.04018353,-5.37227888,-0.87483457],[9.20798765,-3.81407337,0.77723739],[5.3768244,-8.00362846,-0.87483457],[7.04748864,-7.04748864,0.77723739],[2.8297402,-9.29641968,-0.87483457],[4.05707735,-9.15965115,0.77723739],[2.54080417,-8.33927746,-1.45474488],[5.38322917,-6.49304585,-1.72068833],[3.77297939,-8.47142657,-1.42552522],[6.55063586,-6.50953527,-1.42552522],[8.55287921,-3.54271856,-1.42552522],[9.25756974,6.9388939e-16,-1.42552522],[4.29003006,-7.56026465,-1.44944261],[4.42208261,-5.65350318,-1.42552522],[2.60180445,-3.57927076,-1.75020464],[2.85954499,-2.17108417,-1.42552522],[8.53656131,-1.69802762,2.98],[3.95721134,-2.09869293,2.98],[5.30633274,-4.71156562,2.98],[7.23694723,-4.83557354,2.98],[3.95721134,-2.09869293,-1.42552522],[8.50803842,-1.69235406,-1.45474488],[7.21557335,-4.81678853,-1.45474488],[5.30633274,-4.71156562,-1.42552522],[3.17181136,-1.15790611,2.98],[4.12474291,-4.03360108,2.98],[3.63554429,-2.90984226,2.98],[3.17181136,-1.15790611,-1.75020464],[3.63554429,-2.90984226,-1.75020464],[4.1621736,-4.0646348,-1.71244868],[2.8297402,-9.29641968,2.42930935],[2.54704143,-8.36768196,2.98],[1.58000709,-9.03308192,2.98],[1.70102786,-9.72497153,0.77723739],[1.58000709,-9.03308192,-1.42552522],[9.48404312,1.88649347,2.42930935],[8.04018353,5.37227888,2.42930935],[5.3768244,8.00362846,2.42930935],[5.38322917,6.49304585,2.98],[3.77297939,8.47142657,2.98],[6.55063586,6.50953527,2.98],[8.55287921,3.54271856,2.98],[4.314614,7.58182031,2.98],[4.42208261,5.65350318,2.98],[2.60180445,3.57927076,2.98],[2.85954499,2.17108417,2.98],[9.48404312,1.88649347,-0.87483457],[8.04018353,5.37227888,-0.87483457],[9.20798765,3.81407337,0.77723739],[5.3768244,8.00362846,-0.87483457],[7.04748864,7.04748864,0.77723739],[2.8297402,9.29641968,-0.87483457],[4.05707735,9.15965115,0.77723739],[2.54080417,8.33927746,-1.45474488],[5.38322917,6.49304585,-1.72068833],[3.77297939,8.47142657,-1.42552522],[6.55063586,6.50953527,-1.42552522],[8.55287921,3.54271856,-1.42552522],[4.29003006,7.56026465,-1.44944261],[4.42208261,5.65350318,-1.42552522],[2.60180445,3.57927076,-1.75020464],[2.85954499,2.17108417,-1.42552522],[8.53656131,1.69802762,2.98],[3.95721134,2.09869293,2.98],[5.30633274,4.71156562,2.98],[7.23694723,4.83557354,2.98],[3.95721134,2.09869293,-1.42552522],[8.50803842,1.69235406,-1.45474488],[7.21557335,4.81678853,-1.45474488],[5.30633274,4.71156562,-1.42552522],[3.17181136,1.15790611,2.98],[4.12474291,4.03360108,2.98],[3.63554429,2.90984226,2.98],[3.17181136,1.15790611,-1.75020464],[3.63554429,2.90984226,-1.75020464],[4.1621736,4.0646348,-1.71244868],[2.8297402,9.29641968,2.42930935],[2.54704143,8.36768196,2.98],[1.58000709,9.03308192,2.98],[1.70102786,9.72497153,0.77723739],[1.58000709,9.03308192,-1.42552522],[-9.48404312,-1.88649347,2.42930935],[-8.04018353,-5.37227888,2.42930935],[-5.3768244,-8.00362846,2.42930935],[-5.38322917,-6.49304585,2.98],[-3.77297939,-8.47142657,2.98],[-6.55063586,-6.50953527,2.98],[-8.55287921,-3.54271856,2.98],[-9.25756974,6.2450045e-16,2.98],[-4.314614,-7.58182031,2.98],[-4.42208261,-5.65350318,2.98],[-2.60180445,-3.57927076,2.98],[-2.85954499,-2.17108417,2.98],[-9.48404312,-1.88649347,-0.87483457],[-9.96665401,7.9485801e-16,0.77723739],[-8.04018353,-5.37227888,-0.87483457],[-9.20798765,-3.81407337,0.77723739],[-5.3768244,-8.00362846,-0.87483457],[-7.04748864,-7.04748864,0.77723739],[-2.8297402,-9.29641968,-0.87483457],[-4.05707735,-9.15965115,0.77723739],[-2.54080417,-8.33927746,-1.45474488],[-5.38322917,-6.49304585,-1.72068833],[-3.77297939,-8.47142657,-1.42552522],[-6.55063586,-6.50953527,-1.42552522],[-8.55287921,-3.54271856,-1.42552522],[-9.25756974,6.9388939e-16,-1.42552522],[-4.29003006,-7.56026465,-1.44944261],[-4.42208261,-5.65350318,-1.42552522],[-2.60180445,-3.57927076,-1.75020464],[-2.85954499,-2.17108417,-1.42552522],[-8.53656131,-1.69802762,2.98],[-3.95721134,-2.09869293,2.98],[-5.30633274,-4.71156562,2.98],[-7.23694723,-4.83557354,2.98],[-3.95721134,-2.09869293,-1.42552522],[-8.50803842,-1.69235406,-1.45474488],[-7.21557335,-4.81678853,-1.45474488],[-5.30633274,-4.71156562,-1.42552522],[-3.17181136,-1.15790611,2.98],[-4.12474291,-4.03360108,2.98],[-3.63554429,-2.90984226,2.98],[-3.17181136,-1.15790611,-1.75020464],[-3.63554429,-2.90984226,-1.75020464],[-4.1621736,-4.0646348,-1.71244868],[-2.8297402,-9.29641968,2.42930935],[-2.54704143,-8.36768196,2.98],[-1.58000709,-9.03308192,2.98],[-1.70102786,-9.72497153,0.77723739],[-1.58000709,-9.03308192,-1.42552522],[-9.48404312,1.88649347,2.42930935],[-8.04018353,5.37227888,2.42930935],[-5.3768244,8.00362846,2.42930935],[-5.38322917,6.49304585,2.98],[-3.77297939,8.47142657,2.98],[-6.55063586,6.50953527,2.98],[-8.55287921,3.54271856,2.98],[-4.314614,7.58182031,2.98],[-4.42208261,5.65350318,2.98],[-2.60180445,3.57927076,2.98],[-2.85954499,2.17108417,2.98],[-9.48404312,1.88649347,-0.87483457],[-8.04018353,5.37227888,-0.87483457],[-9.20798765,3.81407337,0.77723739],[-5.3768244,8.00362846,-0.87483457],[-7.04748864,7.04748864,0.77723739],[-2.8297402,9.29641968,-0.87483457],[-4.05707735,9.15965115,0.77723739],[-2.54080417,8.33927746,-1.45474488],[-5.38322917,6.49304585,-1.72068833],[-3.77297939,8.47142657,-1.42552522],[-6.55063586,6.50953527,-1.42552522],[-8.55287921,3.54271856,-1.42552522],[-4.29003006,7.56026465,-1.44944261],[-4.42208261,5.65350318,-1.42552522],[-2.60180445,3.57927076,-1.75020464],[-2.85954499,2.17108417,-1.42552522],[-8.53656131,1.69802762,2.98],[-3.95721134,2.09869293,2.98],[-5.30633274,4.71156562,2.98],[-7.23694723,4.83557354,2.98],[-3.95721134,2.09869293,-1.42552522],[-8.50803842,1.69235406,-1.45474488],[-7.21557335,4.81678853,-1.45474488],[-5.30633274,4.71156562,-1.42552522],[-3.17181136,1.15790611,2.98],[-4.12474291,4.03360108,2.98],[-3.63554429,2.90984226,2.98],[-3.17181136,1.15790611,-1.75020464],[-3.63554429,2.90984226,-1.75020464],[-4.1621736,4.0646348,-1.71244868],[-2.8297402,9.29641968,2.42930935],[-2.54704143,8.36768196,2.98],[-1.58000709,9.03308192,2.98],[-1.70102786,9.72497153,0.77723739],[-1.58000709,9.03308192,-1.42552522],[0,8.53656131,2.98],[0,9.48404312,2.42930935],[0,9.48404312,-0.87483457],[0,8.50735344,-1.45474488],[0,-9.48404312,-0.87483457],[0,-9.48404312,2.42930935],[0,-8.53656131,2.98],[0,-8.50735344,-1.45474488],[2.6090625,-2.7755576e-15,2.98],[3.57684903,-2.3592239e-15,2.98],[3.57684903,-2.289835e-15,-1.42552522],[2.6090625,-2.7755576e-15,-1.42552522],[-3.57684903,-2.289835e-15,-1.42552522],[-3.57684903,-2.3592239e-15,2.98],[-2.6090625,-2.7755576e-15,2.98],[-2.6090625,-2.7755576e-15,-1.42552522],[0,2.89477889,2.98],[0,4.34216834,2.98],[0,4.34216834,-1.42552522],[0,2.89477889,-1.42552522],[0,-4.34216834,-1.42552522],[0,-4.34216834,2.98],[0,-2.89477889,2.98],[0,-2.89477889,-1.42552522],[5.1604444,-7.54971912,2.98],[7.6959394,-5.14226231,2.98],[9.07797948,-1.80572239,2.98],[2.91604775,-9.57996204,0.77723739],[5.53613428,-8.28541047,0.77723739],[8.28541047,-5.53613428,0.77723739],[9.77330803,-1.94403184,0.77723739],[2.70858359,-8.89838923,-1.42552522],[5.1604444,-7.54971912,-1.72068833],[7.6959394,-5.14226231,-1.42552522],[9.07797948,-1.80572239,-1.42552522],[4.86420768,-5.1825344,-1.72068833],[3.40837816,-2.13488855,2.98],[4.86420768,-5.1825344,2.98],[3.68619786,-3.46166221,2.98],[3.40837816,-2.13488855,-1.75020464],[3.76105923,-3.52372963,-2.02888846],[2.70858359,-8.89838923,2.98],[5.1604444,7.54971912,2.98],[7.6959394,5.14226231,2.98],[9.07797948,1.80572239,2.98],[2.91604775,9.57996204,0.77723739],[5.53613428,8.28541047,0.77723739],[8.28541047,5.53613428,0.77723739],[9.77330803,1.94403184,0.77723739],[2.70858359,8.89838923,-1.42552522],[5.1604444,7.54971912,-1.72068833],[7.6959394,5.14226231,-1.42552522],[9.07797948,1.80572239,-1.42552522],[4.86420768,5.1825344,-1.72068833],[3.40837816,2.13488855,2.98],[4.86420768,5.1825344,2.98],[3.68619786,3.46166221,2.98],[3.40837816,2.13488855,-1.75020464],[3.76105923,3.52372963,-2.02888846],[2.70858359,8.89838923,2.98],[-5.1604444,-7.54971912,2.98],[-7.6959394,-5.14226231,2.98],[-9.07797948,-1.80572239,2.98],[-2.91604775,-9.57996204,0.77723739],[-5.53613428,-8.28541047,0.77723739],[-8.28541047,-5.53613428,0.77723739],[-9.77330803,-1.94403184,0.77723739],[-2.70858359,-8.89838923,-1.42552522],[-5.1604444,-7.54971912,-1.72068833],[-7.6959394,-5.14226231,-1.42552522],[-9.07797948,-1.80572239,-1.42552522],[-4.86420768,-5.1825344,-1.72068833],[-3.40837816,-2.13488855,2.98],[-4.86420768,-5.1825344,2.98],[-3.68619786,-3.46166221,2.98],[-3.40837816,-2.13488855,-1.75020464],[-3.76105923,-3.52372963,-2.02888846],[-2.70858359,-8.89838923,2.98],[-5.1604444,7.54971912,2.98],[-7.6959394,5.14226231,2.98],[-9.07797948,1.80572239,2.98],[-2.91604775,9.57996204,0.77723739],[-5.53613428,8.28541047,0.77723739],[-8.28541047,5.53613428,0.77723739],[-9.77330803,1.94403184,0.77723739],[-2.70858359,8.89838923,-1.42552522],[-5.1604444,7.54971912,-1.72068833],[-7.6959394,5.14226231,-1.42552522],[-9.07797948,1.80572239,-1.42552522],[-4.86420768,5.1825344,-1.72068833],[-3.40837816,2.13488855,2.98],[-4.86420768,5.1825344,2.98],[-3.68619786,3.46166221,2.98],[-3.40837816,2.13488855,-1.75020464],[-3.76105923,3.52372963,-2.02888846],[-2.70858359,8.89838923,2.98],[0,9.07797948,2.98],[-2.9605947e-18,9.77330803,0.77723739],[0,9.07797948,-1.42552522],[-2.9605947e-18,-9.77330803,0.77723739],[0,-9.07797948,2.98],[0,-9.07797948,-1.42552522],[3.09295576,-2.5673907e-15,2.98],[3.09305555,-2.5228226e-15,-1.59671985],[-3.09295576,-2.5673907e-15,2.98],[-3.09305555,-2.4884466e-15,-1.59671985],[0,3.61847362,2.98],[0,3.62466081,-1.42558418],[0,-3.61847362,2.98],[0,-3.62466081,-1.42558418]]
  const groups = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
return {faces:faces, vertices:vertices, groups:groups}
}

const main = (params) => {
  const sc = 1, ep = params.ep *2

	const vd = volume()
	const vv = polyhedron({points: vd.vertices, faces: vd.faces})

  //let vol = center({}, rotateY(degToRad(180), rotateX(degToRad(90), vv)))
  let vol = center({}, rotateX(degToRad(90), vv))
  
  let r = [], rH = [], rV = []
  let bV = measureBoundingBox(vol)

	// Recup parametres
  const pv = Object.values(params)
  const lH = pv.slice(0,10).filter(Number).map(x => (x-50)/100)
  const lV = pv.slice(10,20).filter(Number).map(x => (x-50)/100)
  
	console.log(pv,lH, lV)
	// 1°) Traverses en X (H)
  fH = bV[1][0] - bV[0][0]
  mH = (bV[1][0] + bV[0][0]) / 2
  var trH = cuboid( {
		size: [ ep, 1+bV[1][1]- bV[0][1], 1+bV[1][2] - bV[0][2] ]} )
	for (let i = 0; i < lH.length; i++){
		var t = intersect(vol, translateX(fH * lH[i], trH))
		if (t.polygons.length > 0)
			rH.push(t)
	}

	// 2°) Traverses en Y (V)
	fV = bV[1][1] - bV[0][1]
	mV = (bV[1][1] + bV[0][1]) / 2
	var trV = cuboid( {
		size: [ 1+ bV[1][0] - bV[0][0], ep, 1+ bV[1][2] - bV[0][2] ]} )	
	for (let i = 0; i < lV.length; i++){
		var t = intersect(vol, translateY(fV * lV[i], trV))
		if (t.polygons.length > 0)
			rV.push(t)
	}
	
	// 3°) Entrecroisement
	var ur = union(intersect(union(rH), union(rV)));
	var tmp = scission3d(ur)  
	var eS = [], eH = [], eV = [];
	for(let i=0; i< tmp.length; i++){
		let p = tmp[i];
		let b = measureBoundingBox(p), 
				d = vec3.subtract(b[1], b[0]);
		let c1 = translate([b[0][0], b[0][1] + ep/2, b[0][2]], 
					cuboid({size: [d[0], d[1]*2, d[2]]}));
		let c2 = translate([b[0][0] + ep/2, b[0][1], b[1][2]], 
					cuboid({size: [d[0]*2, d[1], d[2]]}));
		
		eH.push(intersect(tmp[i], c1));
		eV.push(intersect(tmp[i], c2));
	}
	
	rH = rH.map(x=> subtract(x, eV));
	rV = rV.map(x=> subtract(x, eH));

	// 3d
	//r.push(colorize([0,1,0], translateX(-70, vol)));
	//r.push(colorize([1,0,0], translateX(32-70, rH)));
	//r.push(colorize([0,0,1], translateX(-32-70, rV)));
	
	// 2d
	
	console.log("haut.", fV, fH)
	var dk = Math.max(fV, fH) +1
	for(let ih = 0; ih < rH.length; ih++){
		let b = measureBoundingBox(rH[ih]);
		r.push(translate([dk *ih, dk/2], union(vol2surf(rH[ih], 'x', b[0][0]))))
		//r.push(translateX(dk *ih, vol2surf(rH[ih], 'x', b[0][0])))
	}
	for(let iv = 0; iv < rV.length; iv++){
		let b = measureBoundingBox(rV[iv]);
		r.push(translate([dk *iv, -dk], union(vol2surf(rV[iv], 'y', b[0][1]))))
		//r.push(translate([dk *iv, -dk], vol2surf(rV[iv], 'y', b[0][1])))
	}
		
	return r;
}
function rndColors(){return [Math.random(), Math.random(), Math.random()];}
function sortNb	(E){ // returns E numerically sorted and deduplicated
	return E.sort(function(a, b) {return a-b}).filter(
	    function(item, pos, ary) {return !pos || item != ary[pos - 1]});
}
function scission3d	(geom){
  var i, Pl, j, i1, j1, ok, ti, tj, z, 
  zz = [], P, RScission, til, tjl, tii1, zzl, zzdl;
// construit table de correspondance entre Polygones (P)
// build polygons lookup table
  //P = geom.toPolygons();
  P = geom.polygons;
  
  RScission = [];
  Pl = P.length;
  for (i = 0; i < Pl; i++){
	ti = P[i].vertices;
	z = [];
	for (j = 0; j < Pl; j++){
      tj = P[j].vertices;
	  ok = false;
	  for (i1 = 0; i1 < ti.length; i1++){
	    tii1 = ti[i1];
		for(j1 = 0; j1 < tj.length; j1++)
		  if (!ok)ok = vec3.distance(tii1, tj[j1]) < 0.01;
	  }
	  if (ok)z.push(parseInt(j));
	}
	z = sortNb(z);
	zz.push({e:0, d:z});
  }

// regroupe les correspondances des polygones se touchant
// boucle ne s'arrêtant que quand deux passages retournent le même nb de polygones
// merge lookup data from linked polygons as long as possible
  ok = false;
  nElOk = 0;
  do {
    lnElOk = nElOk;
	nElOk = 0;
	for (i = 0; i < zz.length; i++){
	  if (zz[i].e >= 0) {
	    nElOk++;
		for (j = 0; j < zz[i].d.length; j++){
		  a = zz[i].d[j];
		  if (zz[a].e >= 0)
		    if (i != a) {
			  zz[i].d = sortNb(zz[i].d.concat(zz[a].d));
			  zz[a].e = -1;
			}
		}
	  }
	}
	ok = lnElOk == nElOk;
  }while (!ok);

// construit le tableau des CSG à retourner
// build array of CSG to return
  for (i = 0, zzl = zz.length; i < zzl; i++) {
    if (zz[i].e >= 0) {
			z = [];
			for (j = 0, zzdl = zz[i].d.length; j < zzdl; j++){
				z.push(P[zz[i].d[j]]);
			}
			if(z.length > 0) {
			RScission.push(geom3.create(z));
			}
	  }
  }

  return RScission;
}
function vol2surf(vol, axe, orig = 0){ // axe = 'x' | 'y' | 'z'
// retourne la surface formee par le volume avec l'axe z (à 0)
let S = [];
let X, Y, Z;

for(let n = 0; n < vol.polygons.length; n++){
  let pts = [];
  let P = vol.polygons[n];
  let ok = true;
  switch(axe){
		case 'x':
			X = 1; Y = 2; Z = 0;
			break;
		case 'y':
			X = 0; Y = 2; Z = 1;
			break;
		case 'z':
			X = 0; Y = 1; Z = 2;
			break;
	}
  for(let i=0; (i < P.vertices.length) && ok; i++){
    let pt = P.vertices[i];
    if(Math.abs(pt[Z] - orig)< 0.05){
      pts.push([pt[X], pt[Y]]);
    } else {
      ok = false;
    }
  }
  if (ok){
    if(axe == 'x'){
			S.push(polygon({points:pts.reverse()}));
		} else {
			S.push(polygon({points:pts}));
		}
  }
}

return S;
}

module.exports = { main, getParameterDefinitions }
